cmake_minimum_required(VERSION 3.1)
project(ra_player C)

add_library(opus STATIC IMPORTED)
if(NOT ${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
    add_library(portaudio STATIC IMPORTED)
endif()

configure_file(CMakeLists.txt.in.opus ${CMAKE_CURRENT_SOURCE_DIR}/submodules/libopus/CMakeLists.txt)
execute_process(COMMAND ${CMAKE_COMMAND} -G "${CMAKE_GENERATOR}" . WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/submodules/libopus)
execute_process(COMMAND ${CMAKE_COMMAND} --build . WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/submodules/libopus)

configure_file(CMakeLists.txt.in.portaudio ${CMAKE_CURRENT_SOURCE_DIR}/submodules/portaudio/CMakeLists.txt)
execute_process(COMMAND ${CMAKE_COMMAND} -G "${CMAKE_GENERATOR}" . WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/submodules/portaudio)
execute_process(COMMAND ${CMAKE_COMMAND} --build . WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/submodules/portaudio)

if(WIN32)
    set(prefix "")
    set(suffix ".lib")
else()
    set(prefix "lib")
    set(suffix ".a")
endif()

include_directories(${CMAKE_CURRENT_BINARY_DIR}/install/include)

find_library(OPUS_LIBRARIES NAMES "${prefix}opus${suffix}" HINTS ${CMAKE_CURRENT_BINARY_DIR}/install/lib ${CMAKE_CURRENT_BINARY_DIR}/install/lib64)

if(NOT ${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
    find_library(PORTAUDIO_LIBRARIES NAMES "${prefix}portaudio${suffix}" HINTS ${CMAKE_CURRENT_BINARY_DIR}/install/lib ${CMAKE_CURRENT_BINARY_DIR}/install/lib64)
endif()

set_target_properties(opus PROPERTIES IMPORTED_LOCATION ${OPUS_LIBRARIES})
if(NOT ${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
    set_target_properties(portaudio PROPERTIES IMPORTED_LOCATION ${PORTAUDIO_LIBRARIES})
else()
    add_subdirectory("${CMAKE_CURRENT_SOURCE_DIR}/submodules/portaudio/src/portaudio/" CMakeFiles/portaudio_dir)
endif()

add_executable(raplayer src/main.c src/ra_client.c src/ra_server.c src/ra_client.h src/ra_server.h src/chacha20/chacha20.c src/chacha20/chacha20.h)
if(NOT ${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
    add_dependencies(raplayer opus portaudio)
else()
    add_dependencies(raplayer opus portaudio_static)
endif()

if(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
    target_link_libraries(raplayer opus portaudio_static m dl pthread)
elseif(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
    target_link_libraries(raplayer opus portaudio asound m dl pthread)
elseif(CYGWIN)
    target_link_libraries(raplayer opus portaudio rt winmm m dl pthread)
else()
    target_link_libraries(raplayer opus portaudio m dl pthread)
endif()
